//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DockerForm.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.6.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool MinimizeOnStartup {
            get {
                return ((bool)(this["MinimizeOnStartup"]));
            }
            set {
                this["MinimizeOnStartup"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool MinimizeOnClosing {
            get {
                return ((bool)(this["MinimizeOnClosing"]));
            }
            set {
                this["MinimizeOnClosing"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool BootOnStartup {
            get {
                return ((bool)(this["BootOnStartup"]));
            }
            set {
                this["BootOnStartup"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100")]
        public int ImageHeight {
            get {
                return ((int)(this["ImageHeight"]));
            }
            set {
                this["ImageHeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("75")]
        public int ImageWidth {
            get {
                return ((int)(this["ImageWidth"]));
            }
            set {
                this["ImageWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool MonitorProcesses {
            get {
                return ((bool)(this["MonitorProcesses"]));
            }
            set {
                this["MonitorProcesses"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int IGDBListLength {
            get {
                return ((int)(this["IGDBListLength"]));
            }
            set {
                this["IGDBListLength"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ToastNotifications {
            get {
                return ((bool)(this["ToastNotifications"]));
            }
            set {
                this["ToastNotifications"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SaveOnExit {
            get {
                return ((bool)(this["SaveOnExit"]));
            }
            set {
                this["SaveOnExit"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <s" +
            "tring>Microsoft.FlightDashboard</string>\r\n  <string>Microsoft.GamingServices</st" +
            "ring>\r\n  <string>Microsoft.MicrosoftStickyNotes</string>\r\n  <string>Microsoft.Sc" +
            "reenSketch</string>\r\n  <string>Microsoft.StorePurchaseApp</string>\r\n  <string>Mi" +
            "crosoft.WindowsCalculator</string>\r\n  <string>Microsoft.WindowsFeedbackHub</stri" +
            "ng>\r\n  <string>Microsoft.WindowsStore</string>\r\n  <string>Microsoft.XboxApp</str" +
            "ing>\r\n  <string>Microsoft.XboxDevices</string>\r\n  <string>Microsoft.XboxIdentity" +
            "Provider</string>\r\n  <string>Microsoft.XboxSpeechToTextOverlay</string>\r\n  <stri" +
            "ng>Microsoft.YourPhone</string>\r\n  <string>Microsoft.BingNews</string>\r\n  <strin" +
            "g>Microsoft.BingWeather</string>\r\n  <string>Microsoft.DesktopAppInstaller</strin" +
            "g>\r\n  <string>Xbox</string>\r\n  <string>Microsoft.GetHelp</string>\r\n  <string>Mic" +
            "rosoft.Getstarted</string>\r\n  <string>Microsoft.Messaging</string>\r\n  <string>Mi" +
            "crosoft.Microsoft3DViewer</string>\r\n  <string>Office</string>\r\n  <string>Microso" +
            "ft Solitaire Collection</string>\r\n  <string>Microsoft.MixedReality.Portal</strin" +
            "g>\r\n  <string>Microsoft.MSPaint</string>\r\n  <string>OneNote for Windows 10</stri" +
            "ng>\r\n  <string>Microsoft.OneConnect</string>\r\n  <string>Microsoft.People</string" +
            ">\r\n  <string>Microsoft.Photos.MediaEngineDLC</string>\r\n  <string>Print 3D</strin" +
            "g>\r\n  <string>Skype</string>\r\n  <string>Microsoft.Windows.Photos</string>\r\n  <st" +
            "ring>Microsoft.WindowsAlarms</string>\r\n  <string>Microsoft.WindowsCamera</string" +
            ">\r\n  <string>microsoft.windowscommunicationsapps</string>\r\n  <string>Microsoft.W" +
            "indowsMaps</string>\r\n  <string>Microsoft.WindowsSoundRecorder</string>\r\n  <strin" +
            "g>Xbox TCUI</string>\r\n  <string>Xbox Game Bar Plugin</string>\r\n  <string>Xbox Ga" +
            "me Bar</string>\r\n  <string>Microsoft.ZuneMusic</string>\r\n  <string>Microsoft.Zun" +
            "eVideo</string>\r\n</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection Blacklist {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["Blacklist"]));
            }
            set {
                this["Blacklist"] = value;
            }
        }
    }
}
